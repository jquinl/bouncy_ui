#!/usr/bin/env python
import os
import sys

def get_doc_path():
    return "doc/classes"

def get_doc_classes():
    return [
        "StretchyContainer",
        "PunchyContainer",
        "JumpyContainer",
    ]

env = SConscript("../godot-cpp/SConstruct")
# For the reference:
# - CCFLAGS are compilation flags shared between C and C++
# - CFLAGS are for C-specific compilation flags
# - CXXFLAGS are for C++-specific compilation flags
# - CPPFLAGS are for pre-processor flags
# - CPPDEFINES are for pre-processor defines
# - LINKFLAGS are for linking flags

# tweak this if you want to use different folders, or more folders, to store your source code in.
env.Append(CPPPATH=["src/"])

import config

env.doc_class_path = {}
for cls in config.get_doc_classes():
    env.doc_class_path[cls] = config.get_doc_path() + "/" + cls

if env["target"] in ["editor", "template_debug"]:
    env.AppendUnique(CPPDEFINES=["DEBUG_ENABLED", "DEBUG_METHODS_ENABLED"])
sources = Glob("src/*.cpp")

library = env.SharedLibrary(
    "../../bouncy_ui_gd/bin/bouncy_ui{}{}".format(
         env["suffix"], env["SHLIBSUFFIX"]
    ),
    source=sources,
)



Default(library)
